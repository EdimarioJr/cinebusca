name: PR check
env:
  CYPRESS_SUPABASE_URL: ${{ secrets.CYPRESS_SUPABASE_URL }}
  CYPRESS_SUPABASE_ANON_KEY: ${{ secrets.CYPRESS_SUPABASE_ANON_KEY }}
  CYPRESS_TEST_ACCOUNT_PASSWORD: ${{ secrets.CYPRESS_TEST_ACCOUNT_PASSWORD }}
  CYPRESS_TEST_ACCOUNT_EMAIL: ${{ secrets.CYPRESS_TEST_ACCOUNT_EMAIL }}
  CYPRESS_MOVIE_API_URL: ${{ secrets.CYPRESS_MOVIE_API_URL }}
  NEXT_PUBLIC_SUPABASE_ANON_KEY:  ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
  NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
on:
  pull_request:
    branches:
      - main
jobs:
  deploy-prod:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
  cypress-run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cypress-io/github-action@v6
        with:
          browser: chrome
          headed: true
          build: npm run build
          start: npm run start
          install-command: npm install --legacy-peer-deps
          wait-on: 'http://localhost:3000'
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          if-no-files-found: ignore